{"version":3,"sources":["http-common.js","services/TaskService.js","components/AddTask.js","components/Task.js","components/TasksList.js","App.js","index.js"],"names":["axios","create","baseURL","headers","TaskService","getAll","http","get","id","data","post","update","put","remove","delete","removeAll","findByTitle","title","AddTask","initialTaskState","description","startDate","endDate","priority","status","useState","task","setTask","submitted","setSubmitted","handleInputChange","event","target","name","value","className","onClick","htmlFor","type","required","onChange","TaskDataService","then","response","console","log","catch","e","Task","props","useParams","navigate","useNavigate","currentTask","setCurrentTask","message","setMessage","useEffect","getTask","_id","TasksList","tasks","setTasks","currentIndex","setCurrentIndex","searchTitle","setSearchTitle","retrieveTasks","placeholder","map","index","setActiveTask","to","App","href","path","element","ReactDOM","render","document","getElementById"],"mappings":"4OAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,kDACTC,QAAS,CACP,eAAgB,sBCqCLC,EAVK,CAClBC,OA7Ba,WACb,OAAOC,EAAKC,IAAI,SACjB,EA4BCA,IA1BU,SAAAC,GACV,OAAOF,EAAKC,IAAL,iBAAmBC,GAC3B,EAyBCP,OAvBa,SAAAQ,GACb,OAAOH,EAAKI,KAAK,SAAUD,EAC5B,EAsBCE,OApBa,SAACH,EAAIC,GAClB,OAAOH,EAAKM,IAAL,iBAAmBJ,GAAMC,EACjC,EAmBCI,OAjBa,SAAAL,GACb,OAAOF,EAAKQ,OAAL,iBAAsBN,GAC9B,EAgBCO,UAdgB,WAChB,OAAOT,EAAKQ,OAAL,SACR,EAaCE,YAXkB,SAAAC,GAClB,OAAOX,EAAKC,IAAL,uBAAyBU,GACjC,G,OC6HcC,EAvJC,WACd,IAAMC,EAAmB,CACvBX,GAAI,KACJS,MAAO,GACPG,YAAa,GACbC,UAAW,GACXC,QAAS,GACTC,SAAU,GACVC,OAAQ,IAEV,EAAwBC,mBAASN,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdP,EAAQ,2BAAKD,GAAN,kBAAaO,EAAOC,IAC5B,EAoCD,OACE,qBAAKC,UAAU,cAAf,SACGP,EACC,gCACE,6DACA,wBAAQO,UAAU,kBAAkBC,QAV5B,WACdT,EAAQR,GACRU,GAAa,EACd,EAOO,oBAKF,gCACE,sBAAKM,UAAU,aAAf,UACE,uBAAOE,QAAQ,QAAf,mBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,QACH+B,UAAQ,EACRL,MAAOR,EAAKT,MACZuB,SAAUV,EACVG,KAAK,aAIT,sBAAKE,UAAU,aAAf,UACE,uBAAOE,QAAQ,cAAf,yBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,cACH+B,UAAQ,EACRL,MAAOR,EAAKN,YACZoB,SAAUV,EACVG,KAAK,mBAIT,sBAAKE,UAAU,aAAf,UACE,uBAAOE,QAAQ,YAAf,wBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,YACH+B,UAAQ,EACRL,MAAOR,EAAKL,UACZmB,SAAUV,EACVG,KAAK,iBAKT,sBAAKE,UAAU,aAAf,UACE,uBAAOE,QAAQ,UAAf,sBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,UACH+B,UAAQ,EACRL,MAAOR,EAAKJ,QACZkB,SAAUV,EACVG,KAAK,eAIT,sBAAKE,UAAU,aAAf,UACE,uBAAOE,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,WACH+B,UAAQ,EACRL,MAAOR,EAAKH,SACZiB,SAAUV,EACVG,KAAK,gBAKT,sBAAKE,UAAU,aAAf,UACE,uBAAOE,QAAQ,SAAf,oBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,SACH+B,UAAQ,EACRL,MAAOR,EAAKF,OACZgB,SAAUV,EACVG,KAAK,cAGT,wBAAQG,QA5HC,WACf,IAAI3B,EAAO,CACTQ,MAAOS,EAAKT,MACZG,YAAaM,EAAKN,YAClBC,UAAWK,EAAKL,UAChBC,QAASI,EAAKJ,QACdC,SAAUG,EAAKH,SACfC,OAAQE,EAAKF,QAGfiB,EAAgBxC,OAAOQ,GACpBiC,MAAK,SAAAC,GACJhB,EAAQ,CACNnB,GAAImC,EAASlC,KAAKD,GAClBS,MAAO0B,EAASlC,KAAKQ,MACrBG,YAAauB,EAASlC,KAAKW,YAC3BC,UAAWsB,EAASlC,KAAKY,UACzBC,QAASqB,EAASlC,KAAKa,QACvBC,SAAUoB,EAASlC,KAAKc,SACxBC,OAAQmB,EAASlC,KAAKe,SAExBK,GAAa,GACbe,QAAQC,IAAIF,EAASlC,KACtB,IACAqC,OAAM,SAAAC,GACLH,QAAQC,IAAIE,EACb,GACJ,EAiGkCZ,UAAU,kBAArC,wBAOT,ECCca,EArJF,SAAAC,GACX,IAAQzC,EAAM0C,cAAN1C,GACJ2C,EAAWC,cAWf,EAAsC3B,mBATb,CACvBjB,GAAI,KACJS,MAAO,GACPG,YAAa,GACbC,UAAW,GACXC,QAAS,GACTC,SAAU,GACVC,OAAQ,KAEV,mBAAO6B,EAAP,KAAoBC,EAApB,KACA,EAA8B7B,mBAAS,IAAvC,mBAAO8B,EAAP,KAAgBC,EAAhB,KAaAC,qBAAU,WACJjD,GAZU,SAAAA,GACdiC,EAAgBlC,IAAIC,GACjBkC,MAAK,SAAAC,GACJW,EAAeX,EAASlC,MACxBmC,QAAQC,IAAIF,EAASlC,KACtB,IACAqC,OAAM,SAAAC,GACLH,QAAQC,IAAIE,EACb,GACJ,CAIGW,CAAQlD,EACX,GAAE,CAACA,IAEJ,IAAMsB,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdoB,EAAe,2BAAKD,GAAN,kBAAoBpB,EAAOC,IAC1C,EAyBD,OACE,8BACI,sBAAKC,UAAU,YAAf,UACE,sCACA,iCACE,sBAAKA,UAAU,aAAf,UACE,uBAAOE,QAAQ,QAAf,mBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,QACHyB,KAAK,QACLC,MAAOmB,EAAYpC,MACnBuB,SAAUV,OAGd,sBAAKK,UAAU,aAAf,UACE,uBAAOE,QAAQ,cAAf,yBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,cACHyB,KAAK,cACLC,MAAOmB,EAAYjC,YACnBoB,SAAUV,OAGd,sBAAKK,UAAU,aAAf,UACE,uBAAOE,QAAQ,YAAf,wBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,YACHyB,KAAK,YACLC,MAAOmB,EAAYhC,UACnBmB,SAAUV,OAGd,sBAAKK,UAAU,aAAf,UACE,uBAAOE,QAAQ,UAAf,sBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,UACHyB,KAAK,UACLC,MAAOmB,EAAY/B,QACnBkB,SAAUV,OAGd,sBAAKK,UAAU,aAAf,UACE,uBAAOE,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,WACHyB,KAAK,WACLC,MAAOmB,EAAY9B,SACnBiB,SAAUV,OAGd,sBAAKK,UAAU,aAAf,UACE,uBAAOE,QAAQ,SAAf,oBACA,uBACEC,KAAK,OACLH,UAAU,eACV3B,GAAG,SACHyB,KAAK,SACLC,MAAOmB,EAAY7B,OACnBgB,SAAUV,UAIhB,wBAAQK,UAAU,0BAA0BC,QAnFjC,WACjBK,EAAgB5B,OAAOwC,EAAYM,KAChCjB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASlC,MACrB0C,EAAS,SACV,IACAL,OAAM,SAAAC,GACLH,QAAQC,IAAIE,EACb,GACJ,EA0EO,oBAIA,wBACET,KAAK,SACLH,UAAU,sBACVC,QArGS,WACjBK,EAAgB9B,OAAO0C,EAAYM,IAAKN,GACrCX,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASlC,MACrB+C,EAAW,qCACZ,IACAV,OAAM,SAAAC,GACLH,QAAQC,IAAIE,EACb,GACJ,EAyFO,oBAOA,4BAAIQ,QAIb,ECFcK,EAjJG,WAChB,MAA0BnC,mBAAS,IAAnC,mBAAOoC,EAAP,KAAcC,EAAd,KACA,EAAsCrC,mBAAS,MAA/C,mBAAO4B,EAAP,KAAoBC,EAApB,KACA,EAAwC7B,oBAAU,GAAlD,mBAAOsC,EAAP,KAAqBC,EAArB,KACA,EAAsCvC,mBAAS,IAA/C,mBAAOwC,EAAP,KAAoBC,EAApB,KAEAT,qBAAU,WACRU,GACD,GAAE,IAEH,IAKMA,EAAgB,WACpB1B,EAAgBpC,SACbqC,MAAK,SAAAC,GACJmB,EAASnB,EAASlC,MAClBmC,QAAQC,IAAIF,EAASlC,KACtB,IACAqC,OAAM,SAAAC,GACLH,QAAQC,IAAIE,EACb,GACJ,EAqBD,OACE,sBAAKZ,UAAU,WAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBACEG,KAAK,OACLH,UAAU,eACViC,YAAY,kBACZlC,MAAO+B,EACPzB,SA5CkB,SAAAO,GAC1B,IAAMkB,EAAclB,EAAEf,OAAOE,MAC7BgC,EAAeD,EAChB,IA2CO,qBAAK9B,UAAU,qBAAf,SACE,wBACEA,UAAU,4BACVG,KAAK,SACLF,QA1BQ,WAClBK,EAAgBzB,YAAYiD,GACzBvB,MAAK,SAAAC,GACJmB,EAASnB,EAASlC,MAClBmC,QAAQC,IAAIF,EAASlC,KACtB,IACAqC,OAAM,SAAAC,GACLH,QAAQC,IAAIE,EACb,GACJ,EAcS,2BAUN,sBAAKZ,UAAU,WAAf,UACE,4CAEA,oBAAIA,UAAU,aAAd,SACG0B,GACCA,EAAMQ,KAAI,SAAC3C,EAAM4C,GAAP,OACR,oBACEnC,UACE,oBAAsBmC,IAAUP,EAAe,SAAW,IAE5D3B,QAAS,kBAjDD,SAACV,EAAM4C,GAC3BhB,EAAe5B,GACfsC,EAAgBM,EACjB,CA8C4BC,CAAc7C,EAAM4C,EAA1B,EAJX,SAOG5C,EAAKT,OAFDqD,EANC,SAchB,qBAAKnC,UAAU,WAAf,SACGkB,EACC,gCACE,sCACA,gCACE,gCACE,8CACO,IACRA,EAAYpC,SAEf,gCACE,gCACE,oDACO,IACRoC,EAAYjC,eAEf,gCACE,gCACE,mDACO,IACRiC,EAAYhC,aAEf,gCACE,gCACE,iDACO,IACRgC,EAAY/B,WAEf,gCACE,gCACE,iDACO,IACR+B,EAAY9B,YAEf,gCACE,gCACE,+CACO,IACR8B,EAAY7B,UAGf,cAAC,IAAD,CACEgD,GAAI,UAAYnB,EAAYM,IAC5BxB,UAAU,sBAFZ,qBAQF,gCACE,uBACA,iEAMX,ECzGcsC,MAjCf,WACE,OACE,gCACE,sBAAKtC,UAAU,2CAAf,UACE,mBAAGuC,KAAK,SAASvC,UAAU,eAA3B,kBAGA,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMqC,GAAI,SAAUrC,UAAU,WAA9B,qBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMqC,GAAI,OAAQrC,UAAU,WAA5B,yBAON,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,EAAD,MAC5B,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,aAK3C,ECnCDC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.0f2eaf8a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://ticket-manager-nandan.herokuapp.com/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n","\n// file with API utility functions \nimport http from \"../http-common\";\n\nconst getAll = () => {\n  return http.get(\"/tasks\");\n};\n\nconst get = id => {\n  return http.get(`/tasks/${id}`);\n};\n\nconst create = data => {\n  return http.post(\"/tasks\", data);\n};\n\nconst update = (id, data) => {\n  return http.put(`/tasks/${id}`, data);\n};\n\nconst remove = id => {\n  return http.delete(`/tasks/${id}`);\n};\n\nconst removeAll = () => {\n  return http.delete(`/tasks`);\n};\n\nconst findByTitle = title => {\n  return http.get(`/tasks?title=${title}`);\n};\n\nconst TaskService = {\n  getAll,\n  get,\n  create,\n  update,\n  remove,\n  removeAll,\n  findByTitle\n};\n\nexport default TaskService;\n","// component file to add a new task\n\nimport React, { useState } from \"react\";\nimport TaskDataService from \"../services/TaskService\";\nconst AddTask = () => {\n  const initialTaskState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    startDate: \"\", \n    endDate: \"\",\n    priority: \"\",\n    status: \"\",\n  };\n  const [task, setTask] = useState(initialTaskState);  \n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setTask({ ...task, [name]: value });\n  };\n\n  const saveTask = () => {\n    var data = {\n      title: task.title,\n      description: task.description,\n      startDate: task.startDate, \n      endDate: task.endDate,\n      priority: task.priority,\n      status: task.status,\n    };\n\n    TaskDataService.create(data)\n      .then(response => {\n        setTask({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          startDate: response.data.startDate, \n          endDate: response.data.endDate,\n          priority: response.data.priority,\n          status: response.data.status,\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newTask = () => {\n    setTask(initialTaskState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newTask}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              required\n              value={task.title}\n              onChange={handleInputChange}\n              name=\"title\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"description\"\n              required\n              value={task.description}\n              onChange={handleInputChange}\n              name=\"description\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"startDate\">Start Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"startDate\"\n              required\n              value={task.startDate}\n              onChange={handleInputChange}\n              name=\"startDate\"\n            />\n          </div>\n\n\n          <div className=\"form-group\">\n            <label htmlFor=\"endDate\">End Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"endDate\"\n              required\n              value={task.endDate}\n              onChange={handleInputChange}\n              name=\"endDate\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"priority\">Priority</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"priority\"\n              required\n              value={task.priority}\n              onChange={handleInputChange}\n              name=\"priority\"\n            />\n          </div>\n\n\n          <div className=\"form-group\">\n            <label htmlFor=\"status\">Status</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"status\"\n              required\n              value={task.status}\n              onChange={handleInputChange}\n              name=\"status\"\n            />\n          </div>\n          <button onClick={saveTask} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddTask;\n","// component file for updating or deleting tasks that have been created\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport TaskDataService from \"../services/TaskService\";\n\nconst Task = props => {\n  const { id }= useParams(); // uses url parameter to show selected task\n  let navigate = useNavigate(); // used to navigate back after deleteTask executes\n\n  const initialTaskState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    startDate: \"\", \n    endDate: \"\",\n    priority: \"\",\n    status: \"\",\n  };\n  const [currentTask, setCurrentTask] = useState(initialTaskState);\n  const [message, setMessage] = useState(\"\");\n\n  const getTask = id => {\n    TaskDataService.get(id)\n      .then(response => {\n        setCurrentTask(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {    //use Effect hook to get tasks each time task id changes in the url\n    if (id)\n      getTask(id);\n  }, [id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentTask({ ...currentTask, [name]: value });\n  };\n\n\n  const updateTask = () => {\n    TaskDataService.update(currentTask._id, currentTask)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The task was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const deleteTask = () => {\n    TaskDataService.remove(currentTask._id)\n      .then(response => {\n        console.log(response.data);\n        navigate(\"/tasks\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n        <div className=\"edit-form\">\n          <h4>Task</h4>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                name=\"title\"\n                value={currentTask.title}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                name=\"description\"\n                value={currentTask.description}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"startDate\">Start Date</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"startDate\"\n                name=\"startDate\"\n                value={currentTask.startDate}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"endDate\">End Date</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"endDate\"\n                name=\"endDate\"\n                value={currentTask.endDate}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"priority\">Priority</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"priority\"\n                name=\"priority\"\n                value={currentTask.priority}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"status\">Status</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"status\"\n                name=\"status\"\n                value={currentTask.status}\n                onChange={handleInputChange}\n              />\n            </div>\n          </form>\n          <button className=\"badge badge-danger mr-2\" onClick={deleteTask}>\n            Delete\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateTask}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n    </div>\n  );\n};\n\nexport default Task;\n","// component file to show list of tasks\nimport React, { useState, useEffect } from \"react\";\nimport TaskDataService from \"../services/TaskService\";\nimport { Link } from \"react-router-dom\";\n\nconst TasksList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n\n  useEffect(() => {\n    retrieveTasks();    // use effect hook to retrieve tasks from backend\n  }, []);\n\n  const onChangeSearchTitle = e => {\n    const searchTitle = e.target.value;\n    setSearchTitle(searchTitle);\n  };\n\n  const retrieveTasks = () => {\n    TaskDataService.getAll()\n      .then(response => {\n        setTasks(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n\n\n  const setActiveTask = (task, index) => {  // used to set active tasks if task is clicked on\n    setCurrentTask(task);\n    setCurrentIndex(index);             \n  };\n\n\n  const findByTitle = () => {                 // sends requests to backend to filter tasks based on title criteria and then changes state to only show required tasks\n    TaskDataService.findByTitle(searchTitle)   \n      .then(response => {\n        setTasks(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by title\"\n            value={searchTitle}\n            onChange={onChangeSearchTitle}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByTitle}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-6\">\n        <h4>Tasks List</h4>\n\n        <ul className=\"list-group\">\n          {tasks &&\n            tasks.map((task, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => setActiveTask(task, index)}\n                key={index}\n              >\n                {task.title}\n              </li>\n            ))}\n        </ul>\n\n      </div>\n      <div className=\"col-md-6\">\n        {currentTask ? (\n          <div>\n            <h4>Task</h4>\n            <div>\n              <label>\n                <strong>Title:</strong>\n              </label>{\" \"}\n              {currentTask.title}\n            </div>\n            <div>\n              <label>\n                <strong>Description:</strong>\n              </label>{\" \"}\n              {currentTask.description}\n            </div>\n            <div>\n              <label>\n                <strong>Start Date:</strong>\n              </label>{\" \"}\n              {currentTask.startDate}\n            </div>\n            <div>\n              <label>\n                <strong>End Date:</strong>\n              </label>{\" \"}\n              {currentTask.endDate}\n            </div>\n            <div>\n              <label>\n                <strong>Priority:</strong>\n              </label>{\" \"}\n              {currentTask.priority}\n            </div>\n            <div>\n              <label>\n                <strong>Status:</strong>\n              </label>{\" \"}\n              {currentTask.status}\n            </div>\n\n            <Link\n              to={\"/tasks/\" + currentTask._id}\n              className=\"badge badge-warning\"\n            >\n              Edit\n            </Link>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Task...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TasksList;\n","// primary app with routes to different components and main navbar\nimport React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTask from \"./components/AddTask\";\nimport Task from \"./components/Task\";\nimport TasksList from \"./components/TasksList\";\n\nfunction App() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/tasks\" className=\"navbar-brand\">\n          Task\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/tasks\"} className=\"nav-link\">\n              Tasks\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/add\"} className=\"nav-link\">\n              Add\n            </Link>\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Routes>\n          <Route path=\"/\" element={<TasksList/>} />\n          <Route path=\"/tasks\" element={<TasksList/>} />\n          <Route path=\"/add\" element={<AddTask/>} />\n          <Route path=\"/tasks/:id\" element={<Task/>} />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}